{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index/index.js","webpack:///./index/AppController.js","webpack:///./index/Transactions.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFA;AAAA;AAA+C;;AAE/C,IAAI,yDAAa;AACjB;AACA,CAAC,C;;;;;;;;;;;ACH4C;;;AAG9B;AACf,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,wDAAY;AAC9C;AACA,aAAa;AACb;AACA;AACA;;AAEA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;;AAIA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,qCAAqC;AACnH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AAKA,C;;;;;;;ACzTA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAmD,GAAG;AACtD,uDAAuD,wBAAwB,iCAAiC,iBAAiB;;AAEjI;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,gHAAgH,2DAA2D,EAAE;AAClO;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;;AAGjB,aAAa;AACb;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;;;AAIA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import AppController from \"./AppController.js\";\n\nnew AppController({\n    element: document.getElementById('app')\n})","\nimport Transactions from \"./Transactions.js\";\n\n\nexport default class AppController {\n    constructor({element}) {\n        this._el = element;\n        let self = this;\n        this._data = {\n            transactionsArray: [],\n            total: 0,\n            income: 0,\n            expenses: 0,\n            expensesPercentage: 0,\n        };\n        firebase.auth().onAuthStateChanged(function(user) {\n            if (user) {\n                self._user = user;\n                self._renderAfterLogin();\n                console.log('already logged in');\n\n                self._trans = new Transactions(document.getElementById('transactions_table'), self._user.email, self._updateData.bind(self));\n                self._updateData();\n            } else {\n                self._renderBeforeLogin();\n                console.log('not logged in');\n            }\n\n        });\n\n        this._addEventListeners();\n    }\n\n    /**\n     * Updates Data object and counts all incomes, expenses and total\n     * @param transaction\n     * @param typeOfAction Specifies type 'add' or 'delete'\n     * @private\n     */\n    _updateData(transaction, typeOfAction) {\n        //updating total\n        if(typeOfAction === 'add') {\n            this._data.transactionsArray.push(transaction);\n        }\n        if( typeOfAction === 'remove') {\n            this._data.transactionsArray = this._data.transactionsArray.filter(item => item.id!==transaction.id);\n        }\n\n        let total = Number((this._data.transactionsArray.reduce(function (accumulator, currentItem) {\n            return currentItem.type === 'inc' ? accumulator + Number(currentItem.amount) : accumulator - Number(currentItem.amount);\n        }, 0))) ;\n        this._data.total = total.toFixed(2);\n\n        let income = Number(this._data.transactionsArray.reduce(function (accumulator, currentItem) {\n            if (currentItem.type ==='inc') {\n                return accumulator + Number(currentItem.amount);\n            }\n            return accumulator;\n        }, 0));\n        this._data.income = income.toFixed(2);\n\n\n\n        let expenses = Number(this._data.transactionsArray.reduce(function (accumulator, currentItem) {\n            if (currentItem.type ==='exp') {\n                return accumulator + Number(currentItem.amount);\n            }\n            return accumulator;\n        }, 0));\n        this._data.expenses = expenses.toFixed(2);\n\n\n        let expPerc = Number(+this._data.expenses/ this._data.income) * 100;\n        this._data.expensesPercentage = isFinite(expPerc) ? expPerc.toFixed(1) : 100;\n\n        this._updateBudgetUI();\n\n    }\n\n    /**\n     * Updates HTML of Budget\n     * @private\n     */\n    _updateBudgetUI() {\n        //console.log('new total: ' +this._data.total);\n        document.querySelector('.budget__value').innerHTML = this._data.total + '€';\n        document.querySelector('.budget__income--value').innerHTML = this._data.income + '€';\n        document.querySelector('.budget__expenses--value').innerHTML = this._data.expenses + '€';\n        document.querySelector('.budget__expenses--percentage').innerHTML = this._data.expensesPercentage + '%';\n    }\n\n    /**\n     * Added all event listeners\n     * @private\n     */\n    _addEventListeners() {\n\n        document.addEventListener('DOMContentLoaded', event => {\n            const app = firebase.app();\n            //console.log('dom content loaded');\n        });\n\n        this._el.addEventListener('click', event => {\n            if (event.target.id === 'login-btn' || event.target.parentElement.id === 'login-btn') {\n                this._googleLogin();\n            }\n            if (event.target.id === 'logout-btn') {\n                this._logout();\n            }\n\n            if (event.target.id === 'add__btn' || event.target.parentElement.id === 'add__btn') {\n                //console.log('add button fired');\n\n                let type = document.querySelector('.add__type').value;\n                let description = document.querySelector('.add__description');\n                let value = document.querySelector('.add__value');\n                if (description.value==='' || value.value===0 || value.value==='') return;\n\n                console.log(type, description.value, value.value, this._user.email);\n                //console.log('random id: ' + Math.round(Math.random()*100000000).toString());\n                let userMail = this._user.email;\n                let date = new Date();\n                let time = date.getDate() + '.' + Number(date.getUTCMonth()+1);\n                let id = Math.round(Math.random()*100000000).toString();\n\n                this._updateData({\n                    id: id,\n                        description: description.value,\n                    amount: value.value,\n                    type: type,\n                    userMail: userMail,\n                    time: time\n                }, 'add');\n\n                this._trans._addTransactionToDB.call(this._trans, id, description.value, value.value, type, userMail, time);\n\n                description.value = '';\n                value.value = '';\n\n            }\n\n            if (event.target.id === 'show_expenses' || event.target.id === 'show_income') {\n                if (event.target.id === 'show_expenses') {\n                    document.querySelector('.expenses').classList.remove('invisible');\n                    document.querySelector('.income').classList.add('invisible');\n                } else {\n                    document.querySelector('.expenses').classList.add('invisible');\n                    document.querySelector('.income').classList.remove('invisible');\n                }\n\n\n            }\n\n            if (event.target.classList.contains('deleteb')) {\n\n                let itemToDelete = event.target.closest('.item-a');\n                let idToDelete = itemToDelete.dataset.id;\n                this._updateData({\n                    id: idToDelete,\n                }, 'remove');\n                this._trans._deleteTransaction(idToDelete, itemToDelete);\n            }\n\n            //console.log(event.target);\n\n        });\n\n    }\n\n    /**\n     * Log out from account\n     * @private\n     */\n    _logout() {\n        const self = this;\n        firebase.auth().signOut().then(function() {\n            console.log('Logged out');\n            self._renderBeforeLogin();\n        }).catch(function(error) {\n            console.log('Failed to log out');\n        });\n    }\n\n    /**\n     * Login with google account through Firebase\n     * @private\n     */\n    _googleLogin() {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth().signInWithPopup(provider).then(result => {\n            this._user = result.user;\n            //console.log('logged in ' + this._user.displayName);\n            this._renderAfterLogin();\n\n        })\n            .catch(err => console.log(err));\n    }\n\n    /**\n     * Render a Page before Logging in\n     * @private\n     */\n    _renderBeforeLogin() {\n        this._el.innerHTML = `\n        \n        <div id=\"carouselExampleIndicators\" class=\"carousel slide text-center\" data-ride=\"carousel\">\n             \n              <div class=\"carousel-inner\">\n                <div class=\"carousel-item active item min-vh-100\">\n                  <img src=\"images/iphone.jpg\" class=\"d-block min-vh-100 zoom\" alt=\"...\">\n                </div>\n                <div class=\"carousel-item item min-vh-100\">\n                  <img src=\"images/mac.jpg\" class=\"d-block min-vh-100 zoom\" alt=\"...\">\n                </div>\n              </div>\n              <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Previous</span>\n              </a>\n              <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                <span class=\"sr-only\">Next</span>\n              </a>\n              \n              <div class=\"main-text hidden-xs hidden-sm text-center\">\n                    <p class=\"h1 main-text-item\">Secure and free personal budget tracker</span></p>\n                    \n                    <button class=\"btn btn-primary btn-lg google text-center\" id=\"login-btn\">\n                    <p class=\"button-text\">Log in with Google</p>\n                    </button>\n              </div>\n        </div>\n        `\n\n    }\n\n    /**\n     * Render a Page after user has logged in\n     * @private\n     */\n    _renderAfterLogin() {\n        this._el.innerHTML = `\n            <div id=\"transactions-container\">\n            \n            </div> \n            \n            \n            <div class=\"top\">\n            <div class=\"control_buttons\">\n                <button class=\"btn-primary\" id=\"logout-btn\">Logout</button>\n            </div>\n            <div class=\"budget\">\n                <div class=\"budget__title\">\n                    This is your budget, <span class=\"budget__title--month\">${this._user.displayName.split(' ')[0]}</span>:\n                </div>\n                \n                <div class=\"budget__value\">%%</div>\n                \n                <div class=\"budget__income clearfix\">\n                    <div class=\"budget__income--text\">Income</div>\n                    <div class=\"right\">\n                        <div class=\"budget__income--value\"></div>\n                       <!-- <div class=\"budget__income--percentage\">0 %</div> -->\n                    </div>\n                </div>\n                \n                <div class=\"budget__expenses clearfix\">\n                    <div class=\"budget__expenses--text\">Expenses</div>\n                    <div class=\"right clearfix\">\n                        <div class=\"budget__expenses--value\"></div>\n                        <div class=\"budget__expenses--percentage\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        \n        \n        <div class=\"bottom\">\n            <div class=\"add\">\n                <div class=\"add__container\">\n                    <select class=\"add__type\">\n                        <option value=\"inc\" selected>income</option>\n                        <option value=\"exp\">expense</option>\n                    </select>\n                    <input type=\"text\" class=\"add__description\" placeholder=\"Add description\">\n                    <input type=\"number\" class=\"add__value\" placeholder=\"Value\">\n                    <button id=\"add__btn\" class=\"add__btn btn btn-success\"><i class=\"ion-ios-checkmark-outline\">Add</i></button>\n                </div>\n                \n               \n            </div >\n            <div class=\"toggle_buttons buttons_choise text-center\">\n                <div class=\"btn-group btn-group-toggle \" data-toggle=\"buttons\">\n                      <label class=\"btn btn-primary active\" id=\"show_income\">\n                        <input type=\"radio\" name=\"options\"  autocomplete=\"off\" checked>Show income\n                      </label>\n                      <label class=\"btn btn-primary\" id=\"show_expenses\">\n                        <input type=\"radio\" name=\"options\"  autocomplete=\"off\">Show expenses\n                      </label>\n                      \n                </div>\n            </div>\n            <div id=\"transactions_table\">\n            </div>\n        </div>  \n        `;\n\n    }\n\n\n\n\n}","export default class Transactions {\n    constructor(element, userMail, dataCallback) {\n        this._el = element;\n        this._dataCallback = dataCallback;\n        this._db = firebase.firestore();\n        this._userMail = userMail;\n\n        this._render();\n\n        this._el.addEventListener('click', event => {\n            if (event.target.tagName === 'P') {\n                let id = event.target.closest('p').innerHTML;\n                console.log(event.target.closest('li'));\n                this._deleteTransaction(id, event.target.closest('li'));\n\n            }\n        })\n    }\n\n\n    /**\n     * Adding a transaction to HTML\n     * @param id\n     * @param transaction\n     * @private\n     */\n    _addTransactionToUI(id, transaction) {\n\n        //Adding to HTML\n        let elem = document.createElement('div');\n\n        elem.innerHTML = `\n            <div class=\"item-a clearfix\" data-id=${id}>\n                <div class=\"item__description\"><span>${transaction.description}</span><span class=\"item-time\">${transaction.time}</span></div>\n                \n                      <div class=\"right clearfix\">\n                           <div class=\"item__value\">${transaction.amount}</div>\n                           <div class=\"item__delete\">\n                                <button class=\"item__delete--btn deleteb\">x</button>\n                           </div>\n                      </div>                   \n            </div>     \n                            `;\n\n\n        if (transaction.type === 'inc') {\n\n            this._el.querySelector('.income__list').insertBefore(elem, this._el.querySelector('.income__list').children[0]);\n        } else {\n            this._el.querySelector('.expenses__list').appendChild(elem);\n        }\n\n    }\n\n    /**\n     * Save transaction to firebase firestore\n     * @param id\n     * @param description\n     * @param amount\n     * @param type\n     * @param userMail\n     * @param time\n     * @private\n     */\n    _addTransactionToDB(id, description, amount, type, userMail, time) {\n        this._db.collection(\"transactions\").doc(id.toString()).set({\n            amount: amount,\n            description: description,\n            type: type,\n            user_id: userMail,\n            time: time,\n        })\n            .then(function() {\n                //   console.log(\"Document successfully written!\");\n            })\n            .catch(function(error) {\n                console.error(\"Error writing document: \", error);\n            });\n        /**\n         * Adding a Transaction to HTML\n         */\n        this._addTransactionToUI(id, {\n            amount: amount,\n            description: description,\n            type: type,\n            userMail: userMail,\n            time:time\n        });\n\n    }\n\n    /**\n     * Delete transaction from HTML and from firebase firestore\n     * @param id\n     * @param element\n     * @private\n     */\n    _deleteTransaction(id, element) {\n\n        element.parentElement.removeChild(element);\n        console.log('child removed');\n        this._db.collection(\"transactions\").doc(id).delete().then(function() {\n            console.log(\"Document successfully deleted!\");\n        }).catch(function(error) {\n            console.error(\"Error removing document: \", error);\n        });\n    }\n\n\n    /**\n     * Gets all saved transactions andd calls method to add the to HTML\n     * @private\n     */\n    _getSavedTransactions() {\n        // saving context for calling other methods\n        let self = this;\n\n        this._db.collection(\"transactions\").where(\"user_id\", \"==\", this._userMail)\n            .get()\n            .then(function(querySnapshot) {\n\n                querySnapshot.forEach(function(doc) {\n                    // doc.data() is never undefined for query doc snapshots\n                    const data = doc.data();\n                    self._addTransactionToUI(doc.id,{description: data.description,amount: data.amount, type: data.type,userMail: data.user_id, time:data.time || `${new Date().getDate() + '.'+Number(new Date().getMonth()+1)}`});\n                    self._dataCallback({\n                        id: doc.id,\n                        description: data.description,\n                        amount: data.amount,\n                        type: data.type,\n                        userMail: data.user_id,\n                        time: data.time\n                    }, 'add');\n                });\n\n\n            })\n            .catch(function(error) {\n                console.log(\"Error getting documents: \", error);\n            });\n    }\n\n    /**\n     * Render all Transactions in the HTML\n     * @private\n     */\n    _render() {\n\n        this._el.innerHTML = `<div class=\"container clearfix\">\n                <div class=\"income\">\n                    <h2 class=\"icome__title\">Income</h2>\n                      \n                    <div class=\"income__list\">\n                       \n                     \n                    </div>\n                     \n                </div>\n                \n                \n                \n                <div class=\"expenses invisible\">\n                  <h2 class=\"expenses__title\">Expenses</h2>  \n                    \n                    <div class=\"expenses__list\">\n                       \n                   \n                    </div>\n                </div>\n            </div>\n        `;\n        this._getSavedTransactions();\n    }\n\n}"],"sourceRoot":""}